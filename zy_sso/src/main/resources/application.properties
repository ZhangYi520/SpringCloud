##server
#server.port=8081
#server.servlet.context-path=/sso
#server.tomcat.uri-encoding=UTF-8
##服务器在任何给定时间接受和处理的最大连接数
#server.tomcat.max-connections =10000
##最大工作线程数
#server.tomcat.max-threads =1000
##最小工作线程数
#server.tomcat.min-spare-threads =10

#路径
spring.http.url=http://192.168.0.138:8080/img/

##datasource配置
spring.datasource.url=jdbc:mysql://47.102.135.231:3306/sso?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#生效超时
spring.datasource.hikari.validation-timeout=3000
#连接只读数据库时配置为true， 保证安全
spring.datasource.hikari.read-only=true
#等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
spring.datasource.hikari.connection-timeout=60000
#一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
spring.datasource.hikari.idle-timeout=60000
#连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.max-lifetime=600000
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn= false
spring.datasource.poolPreparedStatements=true
#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.useGlobalDataSourceStat=true
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
spring.datasource.initialization-mode=always





spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#热部署生效
spring.devtools.restart.enabled: true
#设置重启的目录
spring.devtools.restart.additional-paths: src/main/java/com.zy.zy_sso
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude: WEB-INF/**
logging.level.com.qiyun.back.advisoryService.mybatis.dao=debug

# mybatis
#mybatis.type-aliases-package=com.nsm.dongda
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
#mybatis.mapper-locations =classpath:com.zy.zy_sso/**/mybatis/mapper/*.xml
mybatis.mapper-locations =classpath:mapper/**/*.xml
#数据库字段与实体类字段驼峰命名转换
mybatis.configuration.mapUnderscoreToCamelCase=true


#mybatis-plus.mapper-locations=classpath:com.zy.zy_sso/**/mybatis/mapper/*.xml
#mybatis-plus.type-aliases-package=com.mht.springbootmybatisplus.entity

#mysql分页pagehelper
#pagehelper.helper-dialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params.count=countSql

#开启aop
spring.aop.auto=true

# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=47.102.135.231
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=zhangyi_redis

## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8  
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1  
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8  
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0  
## 连接超时时间（毫秒）
#spring.redis.timeout=200
#
#// ThreadPool 实现的类名
#org.quartz.threadPool.class：org.quartz.simpl.SimpleThreadPool
#// 线程数量
#org.quartz.threadPool.threadCount ： 10
#// 线程优先级
#// threadPriority 属性的最大值是常量 java.lang.Thread.MAX_PRIORITY，等于10。最小值为常量 java.lang.Thread.MIN_PRIORITY，为1
#org.quartz.threadPool.threadPriority ： 5
#// 自创建父线程
#//org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread： true