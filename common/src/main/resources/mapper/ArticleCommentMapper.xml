<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.common.dao.ArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="com.zy.common.entity.ArticleComment" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="article_uuid" property="articleUuid" jdbcType="VARCHAR" />
    <result column="user_uuid" property="userUuid" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zy.common.entity.ArticleComment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    uuid, article_uuid, user_uuid, pid, comment_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_comment
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article_comment
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zy.common.entity.ArticleComment" >
    insert into article_comment (uuid, article_uuid, user_uuid, 
      pid, comment_time, content
      )
    values (#{uuid,jdbcType=VARCHAR}, #{articleUuid,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR}, 
      #{pid,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zy.common.entity.ArticleComment" >
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="articleUuid != null" >
        article_uuid,
      </if>
      <if test="userUuid != null" >
        user_uuid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="articleUuid != null" >
        #{articleUuid,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null" >
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zy.common.entity.ArticleComment" >
    update article_comment
    <set >
      <if test="articleUuid != null" >
        article_uuid = #{articleUuid,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null" >
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zy.common.entity.ArticleComment" >
    update article_comment
    set article_uuid = #{articleUuid,jdbcType=VARCHAR},
      user_uuid = #{userUuid,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zy.common.entity.ArticleComment" >
    update article_comment
    set article_uuid = #{articleUuid,jdbcType=VARCHAR},
      user_uuid = #{userUuid,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>